apiVersion: apps/v1
kind: Deployment
metadata:
  name: multicluster-global-hub-manager
  namespace: {{.Namespace}}
  labels:
    name: multicluster-global-hub-manager
spec:
  replicas: {{.Replicas}}
  selector:
    matchLabels:
      name: multicluster-global-hub-manager
  template:
    metadata:
      labels:
        name: multicluster-global-hub-manager
    spec:
      serviceAccountName: multicluster-global-hub-manager
      containers:
        - name: multicluster-global-hub-manager
          image: {{.Image}}
          resources:
          {{- if .Resources.Requests }}
            requests:
              {{- range $key, $value := .Resources.Requests }}
              {{$key}}: {{.ToUnstructured}}
              {{- end }}
          {{- end }}
          imagePullPolicy: {{.ImagePullPolicy}}
          args:
            - --manager-namespace=$(POD_NAMESPACE)
            - --watch-namespace=$(WATCH_NAMESPACE)
            - --postgres-ca-path=/postgres-credential/ca.crt
            - --process-database-url=$(DATABASE_URL)
            - --transport-bridge-database-url=$(DATABASE_URL)
            - --lease-duration={{.LeaseDuration}}
            - --renew-deadline={{.RenewDeadline}}
            - --retry-period={{.RetryPeriod}}
            - --enable-inventory-api={{.EnableInventoryAPI}}
            - --with-acm={{.WithACM}}
            - --transport-failure-threshold={{.TransportFailureThreshold}}
            {{- if .SchedulerInterval}}
            - --scheduler-interval={{.SchedulerInterval}}
            {{- end}}
            - --data-retention={{.RetentionMonth}}
            - --statistics-log-interval={{.StatisticLogInterval}}
            - --enable-pprof={{.EnablePprof}}
            {{- if eq .SkipAuth true}}
            - --cluster-api-url=
            {{- end}}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{.StorageConfigSecret}}
                  key: database-url
            - name: WATCH_NAMESPACE
            {{- if .LaunchJobNames}}
            - name: LAUNCH_JOB_NAMES
              value: {{.LaunchJobNames}}
            {{- end}}
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: http-apiserver
            protocol: TCP
          - containerPort: 8384
            name: metrics
            protocol: TCP
          volumeMounts:
          - mountPath: /postgres-credential
            name: postgres-credential
            readOnly: true
      {{- if .ImagePullSecret }}
      imagePullSecrets:
        - name: {{.ImagePullSecret}}
      {{- end }}
      {{- if .NodeSelector }}
      nodeSelector:
        {{- range $key, $value := .NodeSelector}}
        "{{$key}}": "{{$value}}"
        {{- end}}
      {{- end }}
      {{- if .Tolerations }}
      tolerations:
        {{- range .Tolerations}}
        - key: "{{.Key}}"
          operator: "{{.Operator}}"
          {{- if .Value}}
          value: "{{.Value}}"
          {{- end}}
          effect: "{{.Effect}}"
          {{- if .TolerationSeconds}}
          tolerationSeconds: {{.TolerationSeconds}}
          {{- end}}
        {{- end}}
      {{- end }}
      volumes:
      - name: postgres-credential
        secret:
          secretName: {{.StorageConfigSecret}}
